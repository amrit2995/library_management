# Generated by Django 4.2.8 on 2023-12-28 16:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("password", models.CharField(max_length=255)),
                (
                    "status",
                    models.IntegerField(
                        choices=[
                            (1, "ACTIVE"),
                            (2, "CLOSED"),
                            (3, "CANCELED"),
                            (4, "BLACKLISTED"),
                            (5, "NONE"),
                        ],
                        default=1,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "ISBN",
                    models.CharField(max_length=13, primary_key=True, serialize=False),
                ),
                ("title", models.CharField(max_length=255)),
                ("subject", models.CharField(max_length=255)),
                ("publisher", models.CharField(max_length=255)),
                ("language", models.CharField(max_length=50)),
                ("number_of_pages", models.PositiveIntegerField()),
                (
                    "authors",
                    models.ManyToManyField(related_name="books", to="library.author"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BookItem",
            fields=[
                (
                    "barcode",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("borrowed", models.BooleanField(default=False)),
                ("due_date", models.DateField(blank=True, null=True)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("book_format", models.CharField(max_length=50)),
                ("status", models.CharField(max_length=50)),
                ("date_of_purchase", models.DateField()),
                ("publication_date", models.DateField()),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="book_items",
                        to="library.book",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("address", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=254)),
                ("phone", models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name="Rack",
            fields=[
                (
                    "number",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("location_identifier", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Reservation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("requested_date", models.DateField()),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reservations",
                        to="library.account",
                    ),
                ),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reservations",
                        to="library.bookitem",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="bookitem",
            name="rack",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="book_items",
                to="library.rack",
            ),
        ),
        migrations.AddField(
            model_name="author",
            name="book",
            field=models.ManyToManyField(to="library.book"),
        ),
        migrations.AddField(
            model_name="author",
            name="person",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to="library.person"
            ),
        ),
        migrations.AddField(
            model_name="account",
            name="person",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="accounts",
                to="library.person",
            ),
        ),
    ]
